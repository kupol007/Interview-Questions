Explain Lazy stored Property ?

An initial value of the lazy stored properties is calculated only when the property is called for the first time.

Lazy properties are useful when the initial value for a property is dependent on outside factors whose values are not known until after an instance’s initialization is complete. They are also useful when the initial value for a property requires complex or computationally expensive setup that should not be performed unless or until it is needed.

Lazy rules:

You can’t use lazy with let .
You can’t use it with computed properties . Because, a computed property returns the value every time we try to access it after executing the code inside the computation block.
You can use lazy only with members of struct and class .
Lazy variables are not initialised atomically and so is not thread safe.
NIce Article on Lazy.
