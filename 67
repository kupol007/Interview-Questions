Explain Initialiser designation for class types ?

To simplify the relationships between designated and convenience initializers, Swift applies the following three rules for delegation calls between initializers:


Rule 1: A designated initializer must call a designated initializer from its immediate superclass.

Rule 2: A convenience initializer must call another initializer from the same class.

Rule 3: A convenience initializer must ultimately call a designated initializer.

Note: Designated initializers must always delegate up. Convenience initializers must always delegate across. Apple Docs

